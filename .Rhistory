SCC <- readRDS("Source_Classification_Code.rds")
x<- 2
if(!file.exists("./NEI")){dir.create("./NEI")}
fileurl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
if(!file.exists("./NEI/exdata_data_NEI_data.zip"))
{download.file(fileurl, destfile = "./NEI/exdata_data_NEI_data.zip",
method = "curl")}
datedownloaded <- date()
unzipped.data <- unzip("./NEI/exdata_data_NEI_data.zip")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
require(ggplot2)
library(doBy)
mobile <- grep("onroad", SCC[, 2])
mobile_sources <- SCC[mobile,]
plot5data <- NEI[NEI$SCC == mobile_sources$SCC & NEI$fips == "24510",]
head(NEI)
plot5data <- NEI[NEI$TYPE == ON-ROAD & NEI$fips == "24510",]
plot5data <- NEI[NEI$TYPE == "ON-ROAD" & NEI$fips == "24510",]
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle")
plot5data <- summaryBy(Emissions ~ year, data = plot5data, FUN = sum)
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle")
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
plot6data <- plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
View(plot6data)
lines(plot6data$year, plot6data$Emissions, col = "red")
plot5data <- summaryBy(Emissions ~ year, data = plot5data, FUN = sum)
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
plot5data <- summaryBy(Emissions ~ year, data = plot5data, FUN = sum)
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
plot6data <- summaryBy(Emissions ~ year, data = plot6data, FUN = sum)
lines(plot6data$year, plot6data$Emissions, col = "red")
lines(plot6data$year, plot6data$Emissions, col = "red")
lines(plot5data$year, plot6data$Emissions, col = "red")
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
lines(plot5data$year, plot6data$Emissions, col = "red")
lines(plot5data$year, plot6data$Emissions, col = "red")
par(new = TRUE)
plot(plot6data$year, plot6data$Emissions, type = "b")
plot(plot6data$year, plot6data$Emissions, type = "b", xlab = "", ylab ="", col = "red")
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
par(new = TRUE)
plot(plot6data$year, plot6data$Emissions, type = "b", xlab = "", ylab ="",
col = "red")
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
par(new = TRUE)
plot(plot6data$year, plot6data$Emissions, type = "b", xlab = "", ylab ="",
col = "red", axes = FALSE)
plot(plot5data$year, log(plot5data$Emissions), type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
par(new = TRUE)
plot(plot6data$year, log(plot6data$Emissions), type = "b", xlab = "", ylab ="",
col = "red", axes = FALSE)
log(plot6data$Emissions
log(plot6data$Emissions)
log(plot6data$Emissions)
?lines
plot(plot5data$year, plot5data$Emissions, type = "b", xlab = "Year",
ylab = "Total Emissions (Tons)",
main = "Baltimore City Total Emissions from Motor Vehicle Sources")
lines(plot6data$Emissions, col = "red")
lines(plot6data$Emissions, col = "red")
?lines
lines(plot6data$Emissions, col = "red")
?merge
merged <- merge(plot5data, plot6data, all = TRUE)
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
plot6data <- plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
View(plot6data)
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
mobile <- grep("onroad", SCC[, 2])
mobile_sources <- SCC[mobile,]
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
plot6data <- plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
merged <- merge(plot5data, plot6data, all = TRUE)
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
merged <- merge(plot5data, plot6data, all = TRUE)
View(merged)
View(plot5data)
View(plot6data)
View(plot5data)
View(plot6data)
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
plot6data <- plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
merged <- merge(plot5data, plot6data, all = TRUE)
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
plot6data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
View(plot6data)
View(plot5data)
merged <- merge(plot5data, plot6data, all = TRUE)
View(merged)
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$Emissions.sum, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = log(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
View(merged)
?apply
for (i in plot5data%Emissions.sum) {
plot5data%pct[i] <- (plot5data%Emissions.sum[i+1]/plot5data%Emissions.sum[i]) -1
}
plot5data%pct[i] <- ((plot5data%Emissions.sum[i+1]/plot5data%Emissions.sum[i]) -1)
for (i in plot5data%Emissions.sum) {
plot5data%pct[i] <- ((plot5data%Emissions.sum[i+1]/plot5data%Emissions.sum[i]) -1)
}
require("quantmod")
plot6 <- ggplot(merged, aes(x = merged$year,
y = delt(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
delt(merged$Emissions.sum)
Delt(merged$Emissions.sum)
plot6 <- ggplot(merged, aes(x = merged$year,
y = delt(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual(breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = Delt(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual(breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = Delt(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
geom_line()
?geom_line()
plot6 <- ggplot(merged, aes(x = merged$year,
y = Delt(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
#geom_line() +
scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = Delt(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot5data$delt <- Delt(plot5data$Emissions.sum)
View(plot5data)
View(plot5data)
mobile <- grep("onroad", SCC[, 2])
mobile_sources <- SCC[mobile,]
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
plot5data$delt <- Delt(plot5data$Emissions.sum)
plot6data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
plot6data$delt <- Delt(plot6data$Emissions.sum)
merged <- merge(plot5data, plot6data, all = TRUE)
merged[is.na(merged)] <- 0
View(merged)
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$delt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") +
geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$delt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot5data[is.na(plot5data)] <- 0
plot6data[is.na(plot6data)] <- 0
View(plot6data)
plot6 <- plot(plot6data$year, plot6data$delt)
lines(plot5data$delt)
lines(plot5data$delt, plot5data$year)
plot6 <- plot(plot6data$year, plot6data$delt)
lines(plot5data$delt, plot5data$year)
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$delt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
?geom_line
plot6 <- ggplot(merged, aes(x = merged$year,
y = as.integer(merged$delt), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
View(merged)
merged <- merge(plot5data, plot6data, all = TRUE)
merged[is.na(merged)] <- 0
merged$delt <- as.integer(merged$delt)
View(merged)
plot5data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "24510",]
plot5data <- summaryBy(Emissions ~ year | fips, data = plot5data, FUN = sum)
plot5data$delt <- Delt(plot5data$Emissions.sum)
plot5data[is.na(plot5data)] <- 0
plot6data <- NEI[NEI$type == "ON-ROAD" & NEI$fips == "06037",]
plot6data <- summaryBy(Emissions ~ year | fips, data = plot6data, FUN = sum)
plot6data$delt <- Delt(plot6data$Emissions.sum)
plot6data[is.na(plot6data)] <- 0
merged <- merge(plot5data, plot6data, all = TRUE)
merged$delt <- as.integer(merged$delt)
View(merged)
View(plot5data)
merged <- merge(plot5data, plot6data, all = TRUE)
merged$delt <- as.integer(merged$delt)
merged <- merge(plot5data, plot6data, all = TRUE)
plot6 <- ggplot(merged, aes(x = merged$year,
y = as.integer(merged$delt), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$delt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
mergdedelt <- merged$delt
plot6 <- ggplot(merged, aes(x = merged$year,
y = mergeddelt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
mergdedelt <- merged$delt
plot6 <- ggplot(merged, aes(x = merged$year,
y = mergeddelt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
mergeddelt <- merged$delt
plot6 <- ggplot(merged, aes(x = merged$year,
y = mergeddelt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$delt, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$Emissions, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
View(merged)
View(merged)
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$Emissions.sum, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = log(merged$Emissions.sum), colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
plot6 <- ggplot(merged, aes(x = merged$year,
y = merged$Emissions.sum, colour = fips)) +
labs(title = "Total Motor Vehicle Emissions in Baltimore City and Los Angeles County",
x = "Year",
y = "Total Emissions (Tons)") + geom_line() + scale_colour_manual( breaks = unique(merged$fips),
values = c("black", "red"))
plot6
setwd("~/RepData_PeerAssessment1")
unzip("~/RepData_PeerAssessment1/activity.zip")
data <- read.csv("./activity.csv")
data$date <- as.POSIXct(data$date)
data$interval <- as.factor(data$interval)
meanBYinterval <- as.vector(tapply(data$steps, data$interval, mean,
na.rm = TRUE, simplify = FALSE))
plot(meanBYinterval)
plot(data$interval, meanBYinterval[,])
meanBYinterval[1]
plot(data$interval, meanBYinterval[1:288])
plot(data$interval, meanBYinterval)
meanBYinterval <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
meanBYinterval
meanBYinterval[1]
plot(data$interval, meanBYinterval)
meanBYinterval
plot(data$interval, meanBYinterval)
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval
plot(data$interval, meanBYinterval[,1])
len(meanBYinterval[,1])
length(meanBYinterval[,1])
length(data$interval)
data$interval <- as.factor(data$interval)
length(data$interval)
?aggregate
meanBYinterval <- aggregate(data$steps, data$interval, FUN = mean, na.rm = TRUE)
meanBYinterval <- aggregate(data$steps, as.list(data$interval), FUN = mean, na.rm = TRUE)
meanBYinterval <- aggregate(data$steps, as.list(data$interval), FUN = mean)
data <- read.csv("./activity.csv")
meanBYinterval <- aggregate(data$steps, as.list(data$interval), FUN = mean)
length(data$steps)
length(data$interval)
meanBYinterval <- aggregate(data$steps, data$interval, FUN = mean)
meanBYinterval <- aggregate(data$steps, as.list(data$interval), FUN = mean)
length(as.list(data$interval))
length(data$steps)
meanBYinterval <- aggregate(data$steps, as.list(data$interval), FUN = mean)
meanBYinterval <- aggregate(data$steps, data$interval, FUN = mean)
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean)
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean)
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean, na.rm = TRUE)
meanBYinterval
max(meanBYinterval)
plot(meanBYinterval)
?plot
plot(meanBYinterval, type = "l")
plot(meanBYinterval, type = "l", axes = FALSE)
axis(1, at = data$interval, labels = data$interval)
axis(1, at = data$interval, labels = data$interval, las = 2)
axis(1, at = data$interval, labels = data$interval, las = 1)
?axis
axis(1, at = data$interval, las = 1)
plot(meanBYinterval, type = "l", axes = FALSE)
plot(meanBYinterval, type = "l")
?axis
axis(1, at = data$interval)
axis(1, labels = data$interval)
?axis
plot(unique(data$interval),meanBYinterval, type = "l")
plot(unique(data$interval), meanBYinterval, type = "l",
main = "Average Number of Steps Taken", xlab = "Interval",
ylab = "Average Number of Steps")
plot(unique(data$interval), meanBYinterval, type = "I",
main = "Average Number of Steps Taken", xlab = "Interval",
ylab = "Average Number of Steps")
plot(unique(data$interval), meanBYinterval, type = "l",
main = "Average Number of Steps Taken", xlab = "Interval",
ylab = "Average Number of Steps")
max(meanBYinterval)
maxBYinterval <- merge(unique(data$interval, meanBYinterval)
maxBYinterval
maxBYinterval <- merge(unique(data$interval, meanBYinterval))
maxBYinterval <- merge(unique(data$interval), meanBYinterval)
maxBYinterval
5 * which.max(meanBYinterval)
which.max(meanBYinterval)
which.max(meanBYinterval)
?which.max
which.max(meanBYinterval[,1])
which.max(meanBYinterval[1,])
which.max(meanBYinterval[1])
which.max(meanBYinterval)[1]
which.max(meanBYinterval)[,1]
which.max(meanBYinterval)[1,]
which.max(meanBYinterval)[1]
which.max(meanBYinterval)
type(which.max(meanBYinterval))
class(which.max(meanBYinterval))
class(which.max(meanBYinterval))
which.max(meanBYinterval)
which.max(meanBYinterval)[1]
which.max(meanBYinterval)
summary(which.max(meanBYinterval))
as.matrix(meanBYinterval)
meanBYinterval[,1] <- unique(data$interval)
meanBYinterval <- as.matrix(meanBYinterval)
meanBYinterval[,1] <- unique(data$interval)
meanByinterval
meanBYinterval
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean, na.rm = TRUE)
plot(unique(data$interval), meanBYinterval, type = "l",
main = "Average Number of Steps Taken", xlab = "Interval",
ylab = "Average Number of Steps")
meanBYinterval <- as.matrix(meanBYinterval)
meanBYinterval[,2] <- unique(data$interval)
meanBYinterval
meanBYinterval
meanBYinterval[,2] <- unique(data$interval)
meanBYinterval[, 2] <- unique(data$interval)
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval[, 2] <- unique(data$interval)
meanBYinterval
which.max(meanBYinterval[V1])
which.max(meanBYinterval$V1)
meanBYinterval[which.max(meanBYinterval$V1)]
meanBYinterval[which.max(meanBYinterval$V1),]
meanBYinterval$V2[which.max(meanBYinterval$V1),]
meanBYinterval$V2[which.max(meanBYinterval$V1)]
meanBYinterval$V2[which.max(meanBYinterval$V1)]
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$V1)]
maxmean
maxmean
maxmean <- as.integer(meanBYinterval$V2[which.max(meanBYinterval$V1)])
maxmean
maxmean <- as.numeric(meanBYinterval$V2[which.max(meanBYinterval$V1)])
maxmean
maxmean <- as.numeric(meanBYinterval$V2[which.max(meanBYinterval$V1)])
maxmean
meanBYinterval
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$V1)]
maxmean
maxmean <- as.numeric(meanBYinterval$V2[which.max(meanBYinterval$V1)])
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval[, 2] <- unique(as.numeric(data$interval))
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$V1)]
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean, na.rm = TRUE)
plot(unique(data$interval), meanBYinterval, type = "l",
main = "Average Number of Steps Taken", xlab = "Interval",
ylab = "Average Number of Steps")
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval[, 2] <- unique(as.numeric(data$interval))
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$V1)]
maxmean
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval[, 2] <- unique(as.numeric(data$interval))
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$V1)]
meanBYinterval
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$meanBYinterval)]
maxmean
maxmean
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$meanBYinterval)]
maxmean
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean, na.rm = TRUE)
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval[, 2] <- unique(as.numeric(data$interval))
maxmean <- meanBYinterval$V2[which.max(meanBYinterval$meanBYinterval)]
maxmean
maxmean
maxmean <- meanBYinterval$V2[maxmean]
meanBYinterval <- tapply(data$steps, data$interval, FUN = mean, na.rm = TRUE)
meanBYinterval <- as.data.frame(meanBYinterval)
meanBYinterval[, 2] <- unique(as.numeric(data$interval))
maxindex <- meanBYinterval$V2[which.max(meanBYinterval$meanBYinterval)]
maxmean <- meanBYinterval$V2[104]
